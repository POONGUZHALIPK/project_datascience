{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNTk6jvturA+Oluc94B1Hcc"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FcvhtWhPN9VH","executionInfo":{"status":"ok","timestamp":1743224218572,"user_tz":-330,"elapsed":36,"user":{"displayName":"Poonguzhali P","userId":"02549635751542402747"}},"outputId":"dfb2d2ac-0866-4ea7-98ef-be122ca8174e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Hello, Excited to start Data Science.\n"]}],"source":["print(\"Hello, Excited to start Data Science.\")"]},{"cell_type":"markdown","source":["Hello"],"metadata":{"id":"cF_g3nEyQ0eP"}},{"cell_type":"code","source":["print(\"Hello, Excited to start Data Science.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"20Aqtow3Q3f6","executionInfo":{"status":"ok","timestamp":1743224295237,"user_tz":-330,"elapsed":19,"user":{"displayName":"Poonguzhali P","userId":"02549635751542402747"}},"outputId":"25433172-5368-4e0d-a4f2-e93b7016a0be"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello, Excited to start Data Science.\n"]}]},{"cell_type":"markdown","source":["1.2"],"metadata":{"id":"wwqaJgsMRp3H"}},{"cell_type":"code","source":["customer_name = \"John Doe\"\n","customer_age = 28\n","customer_balance = 120.75\n","print(\"Customer:\", customer_name)\n","print(\"Age:\", customer_age)\n","print(\"Balance:\", customer_balance)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s7CwH-ZVSFlY","executionInfo":{"status":"ok","timestamp":1743224767738,"user_tz":-330,"elapsed":40,"user":{"displayName":"Poonguzhali P","userId":"02549635751542402747"}},"outputId":"4880840b-ada7-4972-c5af-896856456970"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Customer: John Doe\n","Age: 28\n","Balance: 120.75\n"]}]},{"cell_type":"markdown","source":["1.3"],"metadata":{"id":"ecyZVbRTS3yw"}},{"cell_type":"code","source":["product_price = 200\n","discount = product_price * 0.10  # 10% discount\n","final_price = product_price - discount\n","print(\"Final Price after Discount:\", final_price)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Uy_kqzoYS55D","executionInfo":{"status":"ok","timestamp":1743224850220,"user_tz":-330,"elapsed":54,"user":{"displayName":"Poonguzhali P","userId":"02549635751542402747"}},"outputId":"8e974e96-f676-438c-92c3-5801b73b21ac"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Final Price after Discount: 180.0\n"]}]},{"cell_type":"markdown","source":["1.4"],"metadata":{"id":"JSbd6w2vTI_G"}},{"cell_type":"code","source":["import numpy as np\n","sales = np.array([150, 200, 250, 300, 400, 350, 500])  # Sales for each day\n","\n","print(\"Sales Data:\", sales)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VUW_T24UTLkw","executionInfo":{"status":"ok","timestamp":1743224968387,"user_tz":-330,"elapsed":56,"user":{"displayName":"Poonguzhali P","userId":"02549635751542402747"}},"outputId":"e78ebf5d-bcd6-4ea8-fec2-6260606dae37"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Sales Data: [150 200 250 300 400 350 500]\n"]}]},{"cell_type":"markdown","source":["1.5"],"metadata":{"id":"JGDeSTKYTmsI"}},{"cell_type":"code","source":["print(\"Average Sales:\", np.mean(sales))\n","print(\"Highest Sale:\", np.max(sales))\n","print(\"Lowest Sale:\", np.min(sales))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WbnowdeuToWJ","executionInfo":{"status":"ok","timestamp":1743225022648,"user_tz":-330,"elapsed":14,"user":{"displayName":"Poonguzhali P","userId":"02549635751542402747"}},"outputId":"245e1f57-c8b2-440f-e58c-ef44b9a1dfbb"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Average Sales: 307.14285714285717\n","Highest Sale: 500\n","Lowest Sale: 150\n"]}]},{"cell_type":"markdown","source":["1.6"],"metadata":{"id":"V7IURUHOTw8E"}},{"cell_type":"code","source":["import pandas as pd\n","data = {\n","\"Customer\": [\"Alice\", \"Bob\", \"Charlie\"],\n","\"Age\": [25, 30, 35],\n","\"Amount Spent\": [120, 200, 150]\n","}\n","df = pd.DataFrame(data)\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CPh3pnLdTzKN","executionInfo":{"status":"ok","timestamp":1743225083668,"user_tz":-330,"elapsed":818,"user":{"displayName":"Poonguzhali P","userId":"02549635751542402747"}},"outputId":"3fb95340-06c2-4939-e99b-f5fa75d7dd2a"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["  Customer  Age  Amount Spent\n","0    Alice   25           120\n","1      Bob   30           200\n","2  Charlie   35           150\n"]}]},{"cell_type":"markdown","source":["1.7\n"],"metadata":{"id":"m6zXSdLRUEIL"}},{"cell_type":"code","source":["from google.colab import files\n","uploaded = files.upload()  # Upload your CSV file\n","df = pd.read_csv(\"students_dataset.csv\")  # Replace with your file name\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":262},"id":"msJDL9KMUQ0s","executionInfo":{"status":"ok","timestamp":1743226199534,"user_tz":-330,"elapsed":20793,"user":{"displayName":"Poonguzhali P","userId":"02549635751542402747"}},"outputId":"41b1ace7-d936-4694-ceaa-40ae587f4398"},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-c58c98d2-d795-4c02-b37d-7675f02198da\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-c58c98d2-d795-4c02-b37d-7675f02198da\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving students_dataset.csv to students_dataset (1).csv\n"]},{"output_type":"execute_result","data":{"text/plain":["      Name   Age  Marks  Attendance Passed\n","0    Alice  20.0   85.0        90.0    Yes\n","1      Bob  21.0    NaN        80.0     No\n","2  Charlie   NaN   78.0         NaN    Yes\n","3    David  22.0   90.0        85.0    Yes\n","4      Eve  20.0   88.0        95.0     No"],"text/html":["\n","  <div id=\"df-bc01b65b-e09b-428f-91bc-988c25a29f41\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Age</th>\n","      <th>Marks</th>\n","      <th>Attendance</th>\n","      <th>Passed</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Alice</td>\n","      <td>20.0</td>\n","      <td>85.0</td>\n","      <td>90.0</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Bob</td>\n","      <td>21.0</td>\n","      <td>NaN</td>\n","      <td>80.0</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Charlie</td>\n","      <td>NaN</td>\n","      <td>78.0</td>\n","      <td>NaN</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>David</td>\n","      <td>22.0</td>\n","      <td>90.0</td>\n","      <td>85.0</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Eve</td>\n","      <td>20.0</td>\n","      <td>88.0</td>\n","      <td>95.0</td>\n","      <td>No</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bc01b65b-e09b-428f-91bc-988c25a29f41')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bc01b65b-e09b-428f-91bc-988c25a29f41 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bc01b65b-e09b-428f-91bc-988c25a29f41');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-691cffa1-f89a-45c5-977b-d4f5b3329bf4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-691cffa1-f89a-45c5-977b-d4f5b3329bf4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-691cffa1-f89a-45c5-977b-d4f5b3329bf4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 16,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"Alice\",\n          \"Bob\",\n          \"Frank\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5374122295716148,\n        \"min\": 20.0,\n        \"max\": 25.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          20.0,\n          21.0,\n          25.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marks\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.34279463815095,\n        \"min\": 76.0,\n        \"max\": 92.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          77.0,\n          83.0,\n          85.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Attendance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.123903424387503,\n        \"min\": 70.0,\n        \"max\": 95.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          89.0,\n          80.0,\n          88.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Passed\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"No\",\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["1.8"],"metadata":{"id":"lRv5Y9YFYVVE"}},{"cell_type":"code","source":["high_spenders = df[df[\"Marks\"] > 90]\n","print(high_spenders)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TucOWDm1YW_l","executionInfo":{"status":"ok","timestamp":1743226928510,"user_tz":-330,"elapsed":12,"user":{"displayName":"Poonguzhali P","userId":"02549635751542402747"}},"outputId":"4c42baba-b42e-468f-d2cb-469743d8e068"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["  Name   Age  Marks  Attendance Passed\n","8  Ivy  24.0   92.0        92.0    Yes\n"]}]},{"cell_type":"markdown","source":["1.9"],"metadata":{"id":"dcgxIWkjbLcO"}},{"cell_type":"code","source":["df_sorted = df.sort_values(by=\"Marks\", ascending=False)\n","print(df_sorted)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yC0O9_QYbMys","executionInfo":{"status":"ok","timestamp":1743227032249,"user_tz":-330,"elapsed":43,"user":{"displayName":"Poonguzhali P","userId":"02549635751542402747"}},"outputId":"2e3e46a5-a358-4ae2-84c4-a1c852225ca8"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["       Name   Age  Marks  Attendance Passed\n","8       Ivy  24.0   92.0        92.0    Yes\n","3     David  22.0   90.0        85.0    Yes\n","4       Eve  20.0   88.0        95.0     No\n","11      Leo  23.0   87.0         NaN    Yes\n","0     Alice  20.0   85.0        90.0    Yes\n","12     Mona  21.0   83.0        80.0     No\n","15     Paul  22.0   81.0         NaN    Yes\n","7      Hank  21.0   80.0         NaN    Yes\n","9      Jack   NaN   79.0        85.0     No\n","2   Charlie   NaN   78.0         NaN    Yes\n","13     Nina   NaN   77.0        89.0    Yes\n","5     Frank   NaN   76.0        70.0    Yes\n","1       Bob  21.0    NaN        80.0     No\n","6     Grace  23.0    NaN        88.0     No\n","10    Kelly  22.0    NaN        78.0    Yes\n","14    Oscar  25.0    NaN        91.0     No\n"]}]},{"cell_type":"markdown","source":["1.10"],"metadata":{"id":"mvmycOQwbb91"}},{"cell_type":"code","source":["df[\"Name\"] = df[\"Marks\"] // 10\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n5eafV-UbdUW","executionInfo":{"status":"ok","timestamp":1743227109340,"user_tz":-330,"elapsed":57,"user":{"displayName":"Poonguzhali P","userId":"02549635751542402747"}},"outputId":"064ef71e-8ad2-498c-93a1-46db9f19bec8"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["    Name   Age  Marks  Attendance Passed\n","0    8.0  20.0   85.0        90.0    Yes\n","1    NaN  21.0    NaN        80.0     No\n","2    7.0   NaN   78.0         NaN    Yes\n","3    9.0  22.0   90.0        85.0    Yes\n","4    8.0  20.0   88.0        95.0     No\n","5    7.0   NaN   76.0        70.0    Yes\n","6    NaN  23.0    NaN        88.0     No\n","7    8.0  21.0   80.0         NaN    Yes\n","8    9.0  24.0   92.0        92.0    Yes\n","9    7.0   NaN   79.0        85.0     No\n","10   NaN  22.0    NaN        78.0    Yes\n","11   8.0  23.0   87.0         NaN    Yes\n","12   8.0  21.0   83.0        80.0     No\n","13   7.0   NaN   77.0        89.0    Yes\n","14   NaN  25.0    NaN        91.0     No\n","15   8.0  22.0   81.0         NaN    Yes\n"]}]},{"cell_type":"markdown","source":["1.11"],"metadata":{"id":"1CqFiJ7hbxbr"}},{"cell_type":"code","source":["df.to_csv(\"students_dataset.csv\", index=False)\n","files.download(\"students_dataset.csv\")  # Download the file"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"6kLVtbtCbyna","executionInfo":{"status":"ok","timestamp":1743227371640,"user_tz":-330,"elapsed":9,"user":{"displayName":"Poonguzhali P","userId":"02549635751542402747"}},"outputId":"0b734ce2-752e-44f9-a1e8-a4c65b904312"},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_6da25411-67de-4b7f-8eef-5efc547f2119\", \"students_dataset.csv\", 335)"]},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"F3mLYvviUJZu"},"execution_count":null,"outputs":[]}]}